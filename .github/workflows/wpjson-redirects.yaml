name: Redirects WordPress JSON v.1.3
on: [workflow_dispatch]
permissions:
  contents: write
jobs:
  generate_redirects:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests
      
      - name: Generate Redirects
        run: |
          python << EOF
          import os
          import re
          import requests
          import json

          # Add these debug lines at the start of the script
          print("Current working directory:", os.getcwd())
          print("Repository root contents:", os.listdir('.'))
          print("Checking wp-json directory:", os.path.exists('./wp-json'))
          print("Full wp-json/wp/v2/kota path:", os.path.exists('./wp-json/wp/v2/kota/'))

          def find_wp_json_dirs():
              """Find WordPress JSON directories in the repository"""
              wp_json_base = './wp-json/wp/v2/kota/'
              try:
                  # Find directories that potentially contain JSON files
                  return [
                      d for d in os.listdir(wp_json_base)
                      if os.path.isdir(os.path.join(wp_json_base, d))
                  ]
              except Exception as e:
                  print(f"Error finding directories: {e}")
                  return []
          
          def extract_domain_from_json(json_path):
              """Try to extract domain from a JSON file"""
              try:
                  with open(json_path, 'r') as f:
                      data = json.load(f)
                      # Look for a field containing a full URL
                      for key, value in data.items():
                          if isinstance(value, str) and '://' in value:
                              match = re.search(r'https?://([^/]+)', value)
                              if match:
                                  return match.group(1)
              except Exception as e:
                  print(f"Error extracting domain: {e}")
              return None
          
          def get_redirect_info(directory, base_url):
              """Generate redirect information for a directory"""
              try:
                  # Attempt to fetch JSON data
                  json_file_path = f'./wp-json/wp/v2/kota/{directory}/index.html'
                  
                  # Read the entire file content
                  with open(json_file_path, 'r') as f:
                      file_content = f.read()
                  
                  # Try to find valid JSON within the content
                  import re
                  import json
                  
                  # Find JSON-like content using regex
                  json_match = re.search(r'\{.*\}', file_content, re.DOTALL)
                  if json_match:
                      try:
                          data = json.loads(json_match.group(0))
                      except json.JSONDecodeError:
                          print(f"Could not parse JSON for directory {directory}")
                          return None
                  else:
                      print(f"No JSON found in {directory}")
                      return None
                  
                  rendered = data.get('link', '')
                  
                  # Extract the path without the domain
                  if rendered:
                      # Remove the domain part
                      path = re.sub(r'^https?://[^/]+', '', rendered)
                      
                      # Create redirect rule
                      return f"/wp-json/wp/v2/kota/{directory}/ {path} 301\n"
                  return None
              except Exception as e:
                  print(f"Error processing directory {directory}: {e}")
                  return None
          
          # File to store redirects
          redirects_file = '_redirects'
          
          # Existing redirects to preserve
          existing_redirects = set()
          
          # Read existing redirects if file exists
          if os.path.exists(redirects_file):
              with open(redirects_file, 'r') as f:
                  existing_redirects = set(f.readlines())
          
          # Find directories
          directories = find_wp_json_dirs()
          
          # Generate new redirects
          new_redirects = set()
          for directory in directories:
              redirect_info = get_redirect_info(directory, 'toilet-kubikel.test')
              if redirect_info and redirect_info not in existing_redirects:
                  new_redirects.add(redirect_info)
          
          # Combine existing and new redirects
          all_redirects = existing_redirects.union(new_redirects)
          
          # Write all redirects to file
          with open(redirects_file, 'w') as f:
              f.writelines(sorted(all_redirects))
          
          print(f"Added {len(new_redirects)} new redirect rules.")
          print(f"Total redirect rules: {len(all_redirects)}")
          EOF
      
      - name: Commit and Push Changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add _redirects
          git commit -m 'Update redirects with WordPress JSON redirects' || echo "No changes to commit"
          git push
